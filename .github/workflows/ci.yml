name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: timescale/timescaledb:latest-pg14
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: xrp_insight
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Check code formatting with Black
      run: |
        black --check src tests scripts

    - name: Run tests
      env:
        DATABASE_URL: postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/xrp_insight
      run: |
        python -m pytest tests

    - name: Run database initialization
      env:
        DATABASE_URL: postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/xrp_insight
      run: |
        python scripts/init_db.py

    - name: Check database connection
      env:
        DATABASE_URL: postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/xrp_insight
      run: |
        python -c "from src.utils.config import config; from sqlalchemy import create_engine; engine = create_engine(config['database']['url']); connection = engine.connect(); connection.close()"

    - name: Run linter
      run: |
        flake8 src tests scripts